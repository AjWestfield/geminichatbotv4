#!/bin/bash

echo "🗑️  Testing Image Delete Persistence"
echo "==================================="
echo ""
echo "This test verifies that deleted images are permanently removed from the database."
echo ""
echo "Prerequisites:"
echo "- Dev server running: npm run dev"
echo "- Browser console open (F12)"
echo "- Database persistence configured"
echo ""
echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
echo ""
echo "STEP 1: Generate Test Images"
echo "---------------------------"
echo "1. Generate first image: 'Generate an image of a red apple'"
echo "2. Generate second image: 'Generate an image of a green apple'"
echo "3. Edit first image: 'Make it golden'"
echo ""
echo "You should now have 3 images in the gallery."
echo ""
echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
echo ""
echo "STEP 2: Check Current State"
echo "---------------------------"
echo "Run in console:"
echo ""
echo "// Check localStorage"
echo "const stored = JSON.parse(localStorage.getItem('generatedImages') || '[]');"
echo "console.log('Images in localStorage:', stored.length);"
echo "console.table(stored.map(img => ({id: img.id.substring(0,20), prompt: img.prompt.substring(0,30)})));"
echo ""
echo "// Check database"
echo "fetch('/api/images').then(r => r.json()).then(data => {"
echo "  console.log('Images in database:', data.images.length);"
echo "});"
echo ""
echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
echo ""
echo "STEP 3: Delete an Image"
echo "----------------------"
echo "1. Click the trash icon on the 'green apple' image"
echo "2. Image should disappear immediately"
echo ""
echo "Expected console logs:"
echo "  [ImageGallery] Deleting image: img_..."
echo "  [PAGE] Removing deleted image from saved set: img_..."
echo "  [DELETE IMAGE] Attempting to delete image: img_..."
echo "  [DELETE IMAGE] Successfully deleted from database: ..."
echo "  [ImageGallery] Successfully deleted from database: img_..."
echo ""
echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
echo ""
echo "STEP 4: Verify Deletion"
echo "----------------------"
echo "1. Check localStorage again - should have 2 images"
echo "2. Check database again - should have 2 images"
echo ""
echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
echo ""
echo "STEP 5: Refresh Browser (F5)"
echo "---------------------------"
echo "✅ Deleted image should NOT reappear"
echo "✅ Only 2 images should be visible"
echo ""
echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
echo ""
echo "STEP 6: Delete Edited Image"
echo "---------------------------"
echo "1. Delete the golden apple (edited image)"
echo "2. Check for special log:"
echo "   [DELETE IMAGE] Not found by UUID, trying by local ID in metadata"
echo "   [DELETE IMAGE] Found image by local ID, database ID: ..."
echo "3. Refresh - edited image should stay deleted"
echo ""
echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
echo ""
echo "TROUBLESHOOTING:"
echo ""
echo "If images reappear after refresh:"
echo "1. Check for errors in console"
echo "2. Verify API call succeeds (Network tab)"
echo "3. Check if persistence is configured:"
echo "   fetch('/api/check-persistence').then(r => r.json()).then(console.log)"
echo ""
echo "If delete fails with 'not found':"
echo "1. Image ID mismatch between UI and database"
echo "2. Check metadata.localId field in database"
echo ""
echo "SUCCESS CRITERIA:"
echo "✅ Images disappear immediately when deleted"
echo "✅ Console shows successful deletion logs"
echo "✅ Deleted images stay gone after refresh"
echo "✅ Both generated and edited images can be deleted"
echo ""
echo "Press Ctrl+C to exit"